.container.mule-panel.movers(ng-controller="MoversListCtrl")
  .col-md-3.hidden-xs.hidden-sm
    = render partial: "movers_list_sidebar"

  .col-xs-12.visible-sm.visible-xs
    .dropdown.services-dropdown.col-xs-12.col-sm-12
      %li.dropdown
        %a.dropdown-toggle(data-toggle="dropdown" href="#")
          Services Filter
          %b.caret
        %ul.dropdown-menu.unstyled.pull-left.dropdown-features
          %li
            = render partial: "movers_list_sidebar"
  .col-md-9.col-xs-12
    .from-to.col-xs-3
      Move From:
      %strong= " #{@from.titleize} â†’ #{@to.titleize}"
    .display-count.col-xs-3
      = "{{ filteredMovers.length }} of #{@mover_list_items.size} movers"
    = render partial: "mover_list_items"

:javascript
  var app = angular.module("mule");

  app.controller("MoversListCtrl", function($scope, FilterService) {
    $scope.moverListItems = #{@mover_list_items.to_json};
    $scope.filters = {};
    $scope.priceFilters = {};
    $scope.services = FilterService.getServices();
    $scope.insurances = FilterService.getInsurances();
    $scope.prices = FilterService.getPrices();
  });

  app.factory("FilterService", function () {
    var services = #{@services.to_json}

    var insurances = [
      {id: "cargo_insurance", name: "Cargo Insurance"},
      {id: "automobile_insurance", name: "Automobile Insurance"},
      {id: "workers_compensation", name: "Workers Compensation"},
      {id: "general_liability_insurance", name: "General Liability Insurance"},
    ];

    var prices = [
      {id: "one", name: "$"},
      {id: "two", name: "$$"},
      {id: "three", name: "$$$"},
      {id: "four", name: "$$$$"}
    ]

    var getInsurances = function () {
      return insurances;
    };

    var getServices = function () {
      return services;
    };

    var getPrices = function () {
      return prices;
    };

    return {
      getServices: getServices,
      getInsurances: getInsurances,
      getPrices: getPrices,
    }
  });

  app.filter("serviceFilter", function ($filter) {
    return function (moverListItems, filters) {

      // exclude services set to false
      var requestedFilters = {};
      $.each(filters, function (key, val) {
        if (val === true) {
          requestedFilters[key] = true
        }
      });

      return $filter("filter")(moverListItems, requestedFilters);
    }
  });

  app.filter("priceFilter", function () {
    return function (moverListItems, desiredPrices) {
      var priceMapping = {
        one: {low: 0, high: 32},
        two: {low: 33, high: 40},
        three: {low: 41, high: 50},
        four: {low: 51, high: 1000}
      };

      var desiredPriceVals = Object.keys(desiredPrices).map(function (key) {
        return desiredPrices[key];
      });

      // returns all if no price filters provided
      if (desiredPriceVals.indexOf(true) === -1) {
        return moverListItems;
      }

      var matchingMovers = [];

      $.each(moverListItems, function (index, mover) {
        $.each(desiredPrices, function (price, val) {
          if (val === true) {
            if (
                (mover['avg_price_per_hour'] !== null) &&
                (mover['avg_price_per_hour'] >= priceMapping[price]['low']) &&
                (mover['avg_price_per_hour'] <= priceMapping[price]['high'])
                ) {
              matchingMovers.push(mover);
            }
          }
        });
      });

      return matchingMovers;
    }
  });